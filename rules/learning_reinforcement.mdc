---
description:
globs:
alwaysApply: false
---
# 🧠 Learning Reinforcement System

## Purpose
Reinforce your learning by tracking exposure to new concepts, identifying areas needing more practice, and tailoring explanations to your current understanding.

## How It Works
- Track exposure levels for each concept: `beginner`, `intermediate`, `advanced`
- Adjust explanation depth and style based on your exposure
- Reinforce concepts where you show uncertainty or make mistakes
- Update exposure levels as you demonstrate understanding or mastery

## Learning Status Tracking
- For each concept, record:
  - Exposure level
  - Last reinforced date
  - Key concepts and subtopics
  - Preferred explanation style

## Reinforcement Rules

### For Beginner Level:
- Use analogies and real-world examples
- Avoid technical jargon
- Focus on the problem the concept solves
- Provide simple, working examples
- Use visuals or diagrams when possible

### For Intermediate Level:
- Include code/config examples with comments
- Explain the reasoning behind design choices
- Show practical implementation patterns
- Connect to real-world use cases
- Gradually introduce related concepts

### For Advanced Level:
- Focus on optimization, best practices, and trade-offs
- Show complex, production-ready examples
- Discuss integration with other systems
- Highlight monitoring, debugging, and scaling

## Update Triggers
- When you ask for an explanation: increase exposure level
- When you implement a concept successfully: increase exposure level
- When you struggle or make mistakes: reinforce and keep current level
- When you demonstrate mastery: increase to advanced
- When you ask advanced questions: increase exposure level

## Explanation Templates

### Beginner:
```
🎯 [CONCEPT] - Beginner

📖 What is it?
[Simple, non-technical definition]

🏢 Analogy:
[Relatable real-world example]

💡 Why do we need it?
[Problem it solves]

🔧 Simple example:
[Basic code/config]

📚 Key terms:
- [Term]: [Definition]
```

### Intermediate:
```
🎯 [CONCEPT] - Intermediate

📖 Core Concepts:
[Detailed explanation]

🏗️ How it works:
[Architecture/flow]

💻 Example:
[Code/config with comments]

⚡ Best Practices:
- [Practice]: [Reason]

🔗 Related Concepts:
[Connections]
```

### Advanced:
```
🎯 [CONCEPT] - Advanced

🏗️ Architecture:
[System design]

⚙️ Advanced Config:
[Production setup]

🔧 Optimization:
[Performance/scalability]

🚨 Pitfalls:
[What to avoid]

🔗 Integration:
[With other systems]

📊 Monitoring:
[Production considerations]
```

## Update Instructions
1. After each explanation, assess your understanding
2. Update exposure level if needed
3. Note concepts needing reinforcement
4. Update "Last Reinforced" date
5. Adjust future explanations accordingly
